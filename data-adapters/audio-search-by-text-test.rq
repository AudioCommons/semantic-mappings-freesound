PREFIX ac: <https://w3id.org/ac-ontology/aco#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fn: <http://w3id.org/sparql-generate/fn/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
GENERATE {
  <> ac:nodeIndex ?nodeCount .
      ?audioCollection
          rdf:type ac:AudioCollection, prov:Entity ;
          prov:wasAttributedTo <http://freesound.org> .

      <http://freesound.org>
          rdf:type prov:Agent, foaf:Organization ;
          foaf:name "Freesound" .
  GENERATE {
      ?audioCollection ac:memberNode _:audioCollectionNode .
    _:audioCollectionNode
                  a ac:AudioCollectionNode ;
              ac:nodeIndex ?index .
      GENERATE {
      _:audioCollectionNode ac:nodeContent ?audioClip .
      ?audioClip
          rdf:type ac:AudioClip, prov:Entity ;
          ac:available_as ?audioFile ;
          dc:title ?title ;
          prov:wasAttributedTo <http://freesound.org> .
      ?audioFile rdf:type ac:AudioFile .

      }
  ITERATOR iter:JSONPath(?results,"[*]") AS ?res
    WHERE {
  BIND(fn:JSONPath(?res, ".id" ) AS ?id)
  BIND(IRI(fn:JSONPath(?res, "url")) AS ?audioClip)
  BIND(IRI(fn:JSONPath(?res, "previews.preview-lq-ogg")) AS ?audioFile)
  BIND(fn:JSONPath(?res, "name") AS ?title)
      }.
  }
  ITERATOR iter:for(0,1,5) AS ?index
WHERE {
    BIND(fn:JSONPath(?source, CONCAT("$.results[", ?index, "]" )) AS ?results)
  }.
}
SOURCE <http://freesound.org/apiv2/search/text/?query=dog&token=2aL7UlMAoppS0oDzypXExHjv1PR4UekV7rT6NKQF&fields=id,url,download,previews,name,preview-lq> AS ?source
WHERE {
  BIND(fn:JSONPath(?source,"$.count") AS ?nodeCount)
  BIND(BNODE() AS ?audioCollection)
}
